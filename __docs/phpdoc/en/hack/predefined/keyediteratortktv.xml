<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 323150 $ -->

<phpdoc:classref xml:id="class.hack.keyediteratortktv" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The KeyedIterator&lt;Tk, Tv&gt; interface</title>
 <titleabbrev>KeyedIterator&lt;Tk, Tv&gt;</titleabbrev>

 <partintro>

<!-- {{{ Iterator intro -->
  <section xml:id="hack.keyediteratortktv.intro">
   &reftitle.intro;
   <para>
    Interface for external iterators or objects that can be iterated themselves internally.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="hack.keyediteratortktv.synopsis">
   &reftitle.interfacesynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>KeyedIterator&lt;Tk, Tv&gt;</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>KeyedIterator&lt;Tk, Tv&gt;</classname>
     </ooclass>
     
     <ooclass>
      <modifier>extends</modifier>
      <classname>KeyedTraversable&lt;Tk, Tv&gt;</classname>
     </ooclass>

     <ooclass>
      <modifier>extends</modifier>
      <classname>Iterator&lt;Tv&gt;</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.hack.keyediteratortktv')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.hack.iteratortv')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="hack.keyediteratortktv.examples">
   &reftitle.examples;
   <example xml:id="keyediteratortktv.example.basic"><!-- {{{ -->
    <title>Basic usage</title>
    <para>
     This example demonstrates how to iterate over a keyed iterator using &foreach;.
    </para>
    <programlisting role="php">
<![CDATA[
<?hh
class DuplicateStrIterator implements KeyedIterator<string, string> {
  protected $it = 0;

  public function current() {
    return $this->it;
  }

  public function key() {
    return chr(65 + ($this->it % 5));
  }

  public function next() {
    $this->it++;
  }

  public function rewind() {
    $this->it = 0;
  }

  public function valid() {
    return $this->it < 10;
  }
}

$it = new DuplicateStrIterator;

foreach($it as $key => $value) {
  var_dump($key, $value);
  echo "\n";
}
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(1) "A"
int(0)

string(1) "B"
int(1)

string(1) "C"
int(2)

string(1) "D"
int(3)

string(1) "E"
int(4)

string(1) "A"
int(5)

string(1) "B"
int(6)

string(1) "C"
int(7)

string(1) "D"
int(8)

string(1) "E"
int(9)
]]>
    </screen>
   </example><!-- }}} -->
  </section>


 </partintro>

 &hack.predefined.keyediteratortktv.key;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

