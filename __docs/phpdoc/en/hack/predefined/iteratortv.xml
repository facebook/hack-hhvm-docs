<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 323150 $ -->

<phpdoc:classref xml:id="class.hack.iteratortv" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The Iterator&lt;Tv&gt; interface</title>
 <titleabbrev>Iterator&lt;Tv&gt;</titleabbrev>

 <partintro>

<!-- {{{ Iterator intro -->
  <section xml:id="hack.iteratortv.intro">
   &reftitle.intro;
   <para>
    Interface for external iterators or objects that can be iterated themselves internally.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="hack.iteratortv.synopsis">
   &reftitle.interfacesynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Iterator&lt;Tv&gt;</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Iterator&lt;Tv&gt;</classname>
     </ooclass>
     
     <ooclass>
      <modifier>extends</modifier>
      <classname>Traversable&lt;Tv&gt;</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.hack.iteratortv')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="hack.iteratortv.examples">
   &reftitle.examples;
   <example xml:id="iteratortv.example.basic"><!-- {{{ -->
    <title>Basic usage</title>
    <para>
     This example demonstrates in which order methods are called when
     using &foreach; with an iterator.
    </para>
    <programlisting role="php">
<![CDATA[
<?hh
class myIterator<Tv> implements Iterator<Tv> {
  private $position = 0;
  private $array = array(
    "firstelement",
    "secondelement",
    "lastelement",
  );  

  public function __construct() {
    $this->position = 0;
  }

  function rewind(): void {
    var_dump(__METHOD__);
    $this->position = 0;
  }

  function current(): Tv {
    var_dump(__METHOD__);
    return $this->array[$this->position];
  }

  function next(): void {
    var_dump(__METHOD__);
    ++$this->position;
  }

  function valid(): bool {
    var_dump(__METHOD__);
    return isset($this->array[$this->position]);
  }
}

$it = new myIterator;

foreach($it as $value) {
  var_dump($value);
  echo "\n";
}
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(18) "myIterator::rewind"
string(17) "myIterator::valid"
string(19) "myIterator::current"
string(15) "myIterator::key"
string(12) "firstelement"

string(16) "myIterator::next"
string(17) "myIterator::valid"
string(19) "myIterator::current"
string(15) "myIterator::key"
string(13) "secondelement"

string(16) "myIterator::next"
string(17) "myIterator::valid"
string(19) "myIterator::current"
string(15) "myIterator::key"
string(11) "lastelement"

string(16) "myIterator::next"
string(17) "myIterator::valid"
]]>
    </screen>
   </example><!-- }}} -->
  </section>


 </partintro>

 &hack.predefined.iteratortv.current;
 &hack.predefined.iteratortv.key;
 &hack.predefined.iteratortv.next;
 &hack.predefined.iteratortv.rewind;
 &hack.predefined.iteratortv.valid;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

