<?xml version="1.0" encoding="utf-8"?>
<chapter xml:id="hack.continuations">
  <title>Continuations</title>
  <para>
    Continuations provide an easy way to implement iterators without the complexity of implementing <literal>Iterator</literal>interface.
  </para>
  <para>
    Continuations are used in generator functions. They represent types that can be used with the PHP <literal>yield</literal> keyword. A function that is a continuation will return a type of <literal>Continuation&lt;T&gt;</literal>.
    <informalexample>
      <programlisting role="php">
<![CDATA[
<?hh
function yieldInfiniteInts(): Continuation<int> {
  $i = 0;
  while (true) {
    yield $i++;
  }
}

$generator = yieldInfiniteInts();
foreach ($generator as $value) {
  echo "$value\n";
}
]]>
      </programlisting>
    </informalexample>
  </para>
  <para>
    <emphasis>Note</emphasis>: Do not use continuations in the context of asynchronous programming. Instead use asynchronous functions and <literal>Awaitable</literal>.
  </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
